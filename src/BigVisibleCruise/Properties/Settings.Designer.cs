//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BigVisibleCruise.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "14.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(".*")]
        public string ExplicityIncludeProjectRegEx {
            get {
                return ((string)(this["ExplicityIncludeProjectRegEx"]));
            }
            set {
                this["ExplicityIncludeProjectRegEx"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("http://10.153.5.70/ccnet/XmlStatusReport.aspx;http://10.153.5.70:8081/httpAuth/ap" +
            "p/rest/cctray/projects.xml")]
        public string Dashboard {
            get {
                return ((string)(this["Dashboard"]));
            }
            set {
                this["Dashboard"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("LiveThreeColumnStatus")]
        public string Skin {
            get {
                return ((string)(this["Skin"]));
            }
            set {
                this["Skin"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("00:00:15")]
        public global::System.TimeSpan PollFrequency {
            get {
                return ((global::System.TimeSpan)(this["PollFrequency"]));
            }
            set {
                this["PollFrequency"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("dashboard")]
        public string DashboardLogin {
            get {
                return ((string)(this["DashboardLogin"]));
            }
            set {
                this["DashboardLogin"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Superman123")]
        public string DashboardPassword {
            get {
                return ((string)(this["DashboardPassword"]));
            }
            set {
                this["DashboardPassword"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool StartFullscreen {
            get {
                return ((bool)(this["StartFullscreen"]));
            }
            set {
                this["StartFullscreen"] = value;
            }
        }
    }
}
